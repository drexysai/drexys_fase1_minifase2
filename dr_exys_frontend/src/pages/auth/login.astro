---
// P√°gina de Login M√©dico - Layout Expandido
---

<html lang="pt-br">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login M√©dico - Dr. Exys</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #f0fdfa 0%, #ccfbf1 30%, #ffffff 70%, #f8fafc 100%);
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 2rem;
        }
        
        .login-container {
            background: rgba(255, 255, 255, 0.95);
            padding: 3rem;
            border-radius: 20px;
            box-shadow: 0 20px 40px rgba(13, 115, 119, 0.15);
            width: 100%;
            max-width: 500px;
            margin: 20px;
            backdrop-filter: blur(10px);
            border: 1px solid rgba(13, 115, 119, 0.1);
        }
        
        .logo {
            text-align: center;
            margin-bottom: 2.5rem;
        }
        
        .logo h1 {
            font-size: 3em;
            margin-bottom: 0.8rem;
            background: linear-gradient(135deg, #0d7377 0%, #14a085 100%);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }
        
        .logo p {
            color: #0d7377;
            font-size: 1.2em;
            font-weight: 500;
        }
        
        .medical-badge {
            background: linear-gradient(135deg, #0d7377 0%, #14a085 100%);
            color: white;
            padding: 0.8rem 1.5rem;
            border-radius: 25px;
            font-size: 1em;
            font-weight: 600;
            margin: 1.5rem 0;
            text-align: center;
            box-shadow: 0 4px 12px rgba(13, 115, 119, 0.2);
        }
        
        .medical-info {
            background: rgba(240, 253, 250, 0.8);
            padding: 1.5rem;
            border-radius: 12px;
            margin-bottom: 2rem;
            border-left: 5px solid #14a085;
            backdrop-filter: blur(5px);
        }
        
        .medical-info h4 {
            color: #0d7377;
            margin-bottom: 0.8rem;
            font-size: 1.1em;
            font-weight: 600;
        }
        
        .medical-info p {
            color: #059669;
            font-size: 0.95em;
            line-height: 1.5;
        }
        
        .form-group {
            margin-bottom: 2rem;
        }
        
        label {
            display: block;
            margin-bottom: 0.8rem;
            font-weight: 600;
            color: #0d7377;
            font-size: 1em;
        }
        
        input {
            width: 100%;
            padding: 1.2rem;
            border: 2px solid rgba(13, 115, 119, 0.2);
            border-radius: 12px;
            font-size: 1.1rem;
            transition: all 0.3s ease;
            background: rgba(255, 255, 255, 0.9);
            backdrop-filter: blur(5px);
        }
        
        input:focus {
            outline: none;
            border-color: #0d7377;
            box-shadow: 0 0 0 4px rgba(13, 115, 119, 0.1);
            background: rgba(255, 255, 255, 1);
        }
        
        input::placeholder {
            color: #94a3b8;
            font-size: 1rem;
        }
        
        /* Indicadores de valida√ß√£o */
        .field-valid {
            border-color: #14a085 !important;
            box-shadow: 0 0 0 4px rgba(20, 160, 133, 0.1) !important;
        }

        .field-invalid {
            border-color: #ef4444 !important;
            box-shadow: 0 0 0 4px rgba(239, 68, 68, 0.1) !important;
        }

        .field-error {
            color: #ef4444;
            font-size: 0.9em;
            margin-top: 0.6rem;
            display: none;
            font-weight: 500;
        }
        
        .btn {
            width: 100%;
            padding: 1.3rem;
            background: linear-gradient(135deg, #0d7377 0%, #14a085 100%);
            color: white;
            border: none;
            border-radius: 12px;
            font-size: 1.2rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            margin-bottom: 1.5rem;
            box-shadow: 0 4px 12px rgba(13, 115, 119, 0.2);
        }
        
        .btn:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 25px rgba(13, 115, 119, 0.3);
        }
        
        .btn:active {
            transform: translateY(-1px);
        }
        
        .btn:disabled {
            opacity: 0.7;
            cursor: not-allowed;
            transform: none;
        }
        
        .message {
            padding: 1.2rem;
            border-radius: 12px;
            margin-bottom: 1.5rem;
            text-align: center;
            font-weight: 600;
            font-size: 1rem;
        }
        
        .message.success {
            background: rgba(209, 250, 229, 0.9);
            color: #065f46;
            border: 1px solid rgba(5, 150, 105, 0.3);
        }
        
        .message.error {
            background: rgba(254, 226, 226, 0.9);
            color: #991b1b;
            border: 1px solid rgba(239, 68, 68, 0.3);
        }
        
        .link {
            text-align: center;
            margin: 1.5rem 0;
        }
        
        .link a {
            color: #0d7377;
            text-decoration: none;
            font-weight: 600;
            font-size: 1rem;
            transition: all 0.3s ease;
            padding: 0.5rem;
            border-radius: 8px;
        }
        
        .link a:hover {
            color: #14a085;
            text-decoration: underline;
            background: rgba(13, 115, 119, 0.05);
        }
        
        .loading {
            display: none;
            text-align: center;
            margin: 1.5rem 0;
        }
        
        .spinner {
            border: 4px solid rgba(13, 115, 119, 0.1);
            border-top: 4px solid #0d7377;
            border-radius: 50%;
            width: 40px;
            height: 40px;
            animation: spin 1s linear infinite;
            margin: 0 auto 1rem;
        }
        
        .loading p {
            color: #0d7377;
            font-weight: 500;
            font-size: 1rem;
        }
        
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
        
        @media (max-width: 768px) {
            body {
                padding: 1rem;
            }
            
            .login-container {
                padding: 2rem;
                max-width: 100%;
            }
            
            .logo h1 {
                font-size: 2.5em;
            }
            
            .logo p {
                font-size: 1.1em;
            }
            
            input {
                padding: 1rem;
                font-size: 1rem;
            }
            
            .btn {
                padding: 1.1rem;
                font-size: 1.1rem;
            }
        }
        
        @media (max-width: 480px) {
            .login-container {
                padding: 1.5rem;
            }
            
            .logo h1 {
                font-size: 2.2em;
            }
        }
    </style>
</head>
<body>
    <div class="login-container">
        <div class="logo">
            <h1>üè• Dr. Exys</h1>
            <p>Portal de Profissionais de Sa√∫de</p>
        </div>
        
        <div class="medical-badge">
            ü©∫ Acesso Restrito - Profissionais de Sa√∫de
        </div>
        
        <div class="medical-info">
            <h4>√Årea M√©dica Especializada</h4>
            <p>IA especializada, WhatsApp para pacientes e sistema BPO financeiro integrados em uma plataforma √∫nica.</p>
        </div>
        
        <div id="message"></div>
        
        <form id="loginForm">
            <div class="form-group">
                <label for="email">Email Profissional:</label>
                <input type="email" id="email" name="email" required placeholder="medico@clinica.com">
                <div class="field-error" id="email-error"></div>
            </div>
            
            <div class="form-group">
                <label for="password">Senha:</label>
                <input type="password" id="password" name="password" required placeholder="Sua senha m√©dica">
                <div class="field-error" id="password-error"></div>
            </div>
            
            <div class="loading" id="loading">
                <div class="spinner"></div>
                <p>Autenticando profissional...</p>
            </div>
            
            <button type="submit" class="btn" id="submitBtn">Acessar Plataforma M√©dica</button>
        </form>
        
        <div class="link">
            <a href="/auth/register">Novo profissional? Cadastre-se aqui</a>
        </div>
        
        <div class="link">
            <a href="/">‚Üê Voltar para o in√≠cio</a>
        </div>
    </div>

    <script type="module">
        // AuthService inline - mesmo padr√£o do register
        const authService = {
            async login(credentials) {
                const response = await fetch('http://192.168.1.4:8081/api/v1/auth/login/', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(credentials)
                });
                
                if (!response.ok) {
                    const error = await response.json();
                    throw error;
                }
                
                const data = await response.json();
                
                // Salvar tokens no localStorage
                if (data.tokens) {
                    localStorage.setItem('medical_access_token', data.tokens.access);
                    localStorage.setItem('medical_refresh_token', data.tokens.refresh);
                    localStorage.setItem('medical_user', JSON.stringify(data.user));
                }
                
                return data;
            },
            
            isAuthenticated() {
                return !!localStorage.getItem('medical_access_token');
            }
        };
        
        const form = document.getElementById('loginForm');
        const submitBtn = document.getElementById('submitBtn');
        const loading = document.getElementById('loading');
        const messageDiv = document.getElementById('message');
        
        // Redirecionar se profissional j√° estiver logado
        if (authService.isAuthenticated()) {
            console.log('Usu√°rio j√° logado, redirecionando...');
            window.location.href = '/dashboard/medico';
        }
        
        function showMessage(message, type = 'error') {
            messageDiv.innerHTML = `<div class="message ${type}">${message}</div>`;
            setTimeout(() => {
                messageDiv.innerHTML = '';
            }, 7000);
        }
        
        function setLoading(isLoading) {
            if (isLoading) {
                loading.style.display = 'block';
                submitBtn.disabled = true;
                submitBtn.textContent = 'Autenticando...';
            } else {
                loading.style.display = 'none';
                submitBtn.disabled = false;
                submitBtn.textContent = 'Acessar Plataforma M√©dica';
            }
        }

        // Valida√ß√£o visual em tempo real
        const emailInput = document.getElementById('email');
        const passwordInput = document.getElementById('password');

        emailInput.addEventListener('input', () => {
            const email = emailInput.value;
            const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
            
            if (email && emailRegex.test(email)) {
                emailInput.classList.add('field-valid');
                emailInput.classList.remove('field-invalid');
                document.getElementById('email-error').style.display = 'none';
            } else if (email) {
                emailInput.classList.add('field-invalid');
                emailInput.classList.remove('field-valid');
                document.getElementById('email-error').textContent = 'Email inv√°lido';
                document.getElementById('email-error').style.display = 'block';
            } else {
                emailInput.classList.remove('field-valid', 'field-invalid');
                document.getElementById('email-error').style.display = 'none';
            }
        });

        passwordInput.addEventListener('input', () => {
            const password = passwordInput.value;
            
            if (password.length >= 3) {
                passwordInput.classList.add('field-valid');
                passwordInput.classList.remove('field-invalid');
                document.getElementById('password-error').style.display = 'none';
            } else if (password) {
                passwordInput.classList.add('field-invalid');
                passwordInput.classList.remove('field-valid');
                document.getElementById('password-error').textContent = 'Senha muito curta';
                document.getElementById('password-error').style.display = 'block';
            } else {
                passwordInput.classList.remove('field-valid', 'field-invalid');
                document.getElementById('password-error').style.display = 'none';
            }
        });
        
        form.addEventListener('submit', async (e) => {
            e.preventDefault();
            console.log('üîß Login form submetido!'); // Debug
            
            const formData = new FormData(e.target);
            const credentials = {
                email: formData.get('email'),
                password: formData.get('password')
            };
            
            console.log('üîß Dados do login:', credentials); // Debug
            console.log('üîß URL da API:', 'http://192.168.1.4:8081/api/v1/auth/login/'); // Debug
            
            // Valida√ß√£o b√°sica
            if (!credentials.email || !credentials.password) {
                showMessage('Por favor, preencha todos os campos');
                return;
            }
            
            setLoading(true);
            
            try {
                console.log('üîß Enviando para API de login...'); // Debug
                const response = await authService.login(credentials);
                console.log('üîß Resposta da API login:', response); // Debug
                
                if (response.success) {
                    showMessage('Login m√©dico realizado com sucesso! Redirecionando...', 'success');
                    
                    setTimeout(() => {
                        console.log('üîß Redirecionando para dashboard...');
                        window.location.href = '/dashboard/medico';
                    }, 1500);
                } else {
                    throw new Error(response.message || 'Erro no login');
                }
                
            } catch (error) {
                console.error('üîß Erro completo no login:', error); // Debug
                
                let errorMessage = 'Erro no login. Verifique suas credenciais m√©dicas.';
                
                if (error.errors) {
                    console.log('üîß Erros da API:', error.errors); // Debug
                    const errors = [];
                    for (const [field, messages] of Object.entries(error.errors)) {
                        if (Array.isArray(messages)) {
                            errors.push(...messages);
                        } else {
                            errors.push(messages);
                        }
                    }
                    errorMessage = errors.join(', ');
                } else if (error.message) {
                    errorMessage = error.message;
                }
                
                console.log('üîß Mensagem de erro final:', errorMessage); // Debug
                showMessage(errorMessage);
            } finally {
                setLoading(false);
            }
        });

        // Debug inicial
        console.log('üîß P√°gina de login carregada');
        console.log('üîß AuthService dispon√≠vel:', !!authService);
        console.log('üîß J√° autenticado?', authService.isAuthenticated());
    </script>
</body>
</html>