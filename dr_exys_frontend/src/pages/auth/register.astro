---
// P√°gina de Cadastro M√©dico
---

<html lang="pt-br">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Cadastro M√©dico - Dr. Exys</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #0d7377 0%, #14a085 100%);
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 20px 0;
        }
        
        .register-container {
            background: white;
            padding: 2.5rem;
            border-radius: 15px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.2);
            width: 100%;
            max-width: 600px;
            margin: 20px;
        }
        
        .logo {
            text-align: center;
            margin-bottom: 2rem;
        }
        
        .logo h1 {
            color: #0d7377;
            font-size: 2.5em;
            margin-bottom: 0.5rem;
        }
        
        .logo p {
            color: #666;
            font-size: 1.1em;
        }
        
        .medical-badge {
            background: linear-gradient(135deg, #0d7377 0%, #14a085 100%);
            color: white;
            padding: 0.5rem 1rem;
            border-radius: 20px;
            font-size: 0.9em;
            font-weight: 600;
            margin: 1rem 0;
            text-align: center;
        }
        
        .form-group {
            margin-bottom: 1.5rem;
        }
        
        .form-row {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 1rem;
        }
        
        label {
            display: block;
            margin-bottom: 0.5rem;
            font-weight: 600;
            color: #333;
        }
        
        .required {
            color: #dc3545;
        }
        
        input, select {
            width: 100%;
            padding: 1rem;
            border: 2px solid #e1e5e9;
            border-radius: 8px;
            font-size: 1rem;
            transition: border-color 0.3s ease, box-shadow 0.3s ease;
        }
        
        input:focus, select:focus {
            outline: none;
            border-color: #0d7377;
            box-shadow: 0 0 0 3px rgba(13, 115, 119, 0.1);
        }
        
        /* Indicadores de valida√ß√£o */
        .field-valid {
            border-color: #28a745 !important;
            box-shadow: 0 0 0 3px rgba(40, 167, 69, 0.1) !important;
        }

        .field-invalid {
            border-color: #dc3545 !important;
            box-shadow: 0 0 0 3px rgba(220, 53, 69, 0.1) !important;
        }

        .field-error {
            color: #dc3545;
            font-size: 0.8em;
            margin-top: 0.5rem;
            display: none;
        }

        .password-check {
            margin-top: 0.5rem;
            font-size: 0.8em;
        }

        .check-item {
            display: flex;
            align-items: center;
            margin: 0.3rem 0;
            color: #666;
            transition: color 0.3s ease;
        }

        .check-item.valid {
            color: #28a745;
        }

        .check-item.invalid {
            color: #dc3545;
        }

        .check-icon {
            margin-right: 0.5rem;
            font-weight: bold;
            width: 15px;
        }

        .strength-bar {
            height: 4px;
            background: #e9ecef;
            border-radius: 2px;
            margin-top: 0.5rem;
            overflow: hidden;
        }

        .strength-fill {
            height: 100%;
            transition: all 0.3s ease;
            border-radius: 2px;
            width: 0%;
        }

        .strength-weak { background: #dc3545; width: 25%; }
        .strength-fair { background: #ffc107; width: 50%; }
        .strength-good { background: #28a745; width: 75%; }
        .strength-strong { background: #28a745; width: 100%; }
        
        .btn {
            width: 100%;
            padding: 1rem;
            background: linear-gradient(135deg, #0d7377 0%, #14a085 100%);
            color: white;
            border: none;
            border-radius: 8px;
            font-size: 1.1rem;
            font-weight: 600;
            cursor: pointer;
            transition: transform 0.2s ease, box-shadow 0.2s ease;
            margin-bottom: 1rem;
        }
        
        .btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(13, 115, 119, 0.4);
        }
        
        .btn:disabled {
            opacity: 0.7;
            cursor: not-allowed;
            transform: none;
        }
        
        .message {
            padding: 1rem;
            border-radius: 8px;
            margin-bottom: 1rem;
            text-align: center;
            font-weight: 600;
        }
        
        .message.success {
            background: #d4edda;
            color: #155724;
            border: 1px solid #c3e6cb;
        }
        
        .message.error {
            background: #f8d7da;
            color: #721c24;
            border: 1px solid #f5c6cb;
        }
        
        .link {
            text-align: center;
            margin-top: 1.5rem;
        }
        
        .link a {
            color: #0d7377;
            text-decoration: none;
            font-weight: 600;
            transition: color 0.3s ease;
        }
        
        .link a:hover {
            color: #14a085;
            text-decoration: underline;
        }
        
        .loading {
            display: none;
            text-align: center;
            margin: 1rem 0;
        }
        
        .spinner {
            border: 3px solid #f3f3f3;
            border-top: 3px solid #0d7377;
            border-radius: 50%;
            width: 30px;
            height: 30px;
            animation: spin 1s linear infinite;
            margin: 0 auto;
        }
        
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
        
        .medical-info {
            background: #f8f9fa;
            padding: 1rem;
            border-radius: 8px;
            margin-bottom: 1.5rem;
            border-left: 4px solid #0d7377;
        }
        
        .medical-info h4 {
            color: #0d7377;
            margin-bottom: 0.5rem;
        }
        
        .medical-info p {
            color: #666;
            font-size: 0.9em;
            line-height: 1.4;
        }
        
        .crm-info {
            background: #fff3e0;
            padding: 0.8rem;
            border-radius: 6px;
            margin-top: 0.5rem;
            border-left: 4px solid #ff9800;
        }
        
        .crm-info p {
            color: #f57c00;
            font-size: 0.85em;
            margin: 0;
        }
        
        @media (max-width: 768px) {
            .form-row {
                grid-template-columns: 1fr;
            }
        }
    </style>
</head>
<body>
    <div class="register-container">
        <div class="logo">
            <h1>üè• Dr. Exys</h1>
            <p>Cadastro de Profissionais de Sa√∫de</p>
        </div>
        
        <div class="medical-badge">
            ü©∫ Registro Exclusivo - Profissionais de Sa√∫de
        </div>
        
        <div class="medical-info">
            <h4>Plataforma M√©dica Especializada</h4>
            <p>Cadastre-se para ter acesso √† IA m√©dica especializada, sistema de gest√£o de pacientes via WhatsApp e BPO financeiro integrado para profissionais de sa√∫de.</p>
        </div>
        
        <div id="message"></div>
        
        <form id="registerForm">
            <div class="form-row">
                <div class="form-group">
                    <label for="first_name">Nome <span class="required">*</span></label>
                    <input type="text" id="first_name" name="first_name" required placeholder="Dr. Jo√£o">
                    <div class="field-error" id="first-name-error"></div>
                </div>
                
                <div class="form-group">
                    <label for="last_name">Sobrenome <span class="required">*</span></label>
                    <input type="text" id="last_name" name="last_name" required placeholder="Silva">
                    <div class="field-error" id="last-name-error"></div>
                </div>
            </div>
            
            <div class="form-group">
                <label for="email">Email Profissional <span class="required">*</span></label>
                <input type="email" id="email" name="email" required placeholder="dr.joao@clinica.com">
                <div class="field-error" id="email-error"></div>
            </div>
            
            <div class="form-group">
                <label for="username">Nome de Usu√°rio <span class="required">*</span></label>
                <input type="text" id="username" name="username" required placeholder="dr_joao_silva">
                <div class="field-error" id="username-error"></div>
            </div>
            
            <div class="form-row">
                <div class="form-group">
                    <label for="crm">CRM <span class="required">*</span></label>
                    <input type="text" id="crm" name="crm" required placeholder="12345-SP" maxlength="10">
                    <div class="crm-info">
                        <p>Informe seu CRM com UF (ex: 12345-SP). Este campo √© obrigat√≥rio para profissionais de sa√∫de.</p>
                    </div>
                    <div class="field-error" id="crm-error"></div>
                </div>
                
                <div class="form-group">
                    <label for="especialidade">Especialidade <span class="required">*</span></label>
                    <select id="especialidade" name="especialidade" required>
                        <option value="">Selecione sua especialidade</option>
                        <option value="Cardiologia">Cardiologia</option>
                        <option value="Dermatologia">Dermatologia</option>
                        <option value="Endocrinologia">Endocrinologia</option>
                        <option value="Gastroenterologia">Gastroenterologia</option>
                        <option value="Ginecologia">Ginecologia</option>
                        <option value="Neurologia">Neurologia</option>
                        <option value="Oftalmologia">Oftalmologia</option>
                        <option value="Ortopedia">Ortopedia</option>
                        <option value="Otorrinolaringologia">Otorrinolaringologia</option>
                        <option value="Pediatria">Pediatria</option>
                        <option value="Psiquiatria">Psiquiatria</option>
                        <option value="Radiologia">Radiologia</option>
                        <option value="Urologia">Urologia</option>
                        <option value="Cl√≠nica M√©dica">Cl√≠nica M√©dica</option>
                        <option value="Cirurgia Geral">Cirurgia Geral</option>
                        <option value="Anestesiologia">Anestesiologia</option>
                        <option value="Medicina da Fam√≠lia">Medicina da Fam√≠lia</option>
                        <option value="Outro">Outro</option>
                    </select>
                    <div class="field-error" id="especialidade-error"></div>
                </div>
            </div>
            
            <div class="form-group">
                <label for="phone">Telefone (Opcional)</label>
                <input type="tel" id="phone" name="phone" placeholder="(11) 99999-9999">
            </div>
            
            <div class="form-row">
                <div class="form-group">
                    <label for="password">Senha <span class="required">*</span></label>
                    <input type="password" id="password" name="password" required placeholder="Sua senha segura">
                    <div class="field-error" id="password-error"></div>
                    
                    <!-- Indicador de for√ßa da senha -->
                    <div class="password-check" id="password-check">
                        <div class="check-item" id="check-length">
                            <span class="check-icon">‚úó</span>
                            <span>M√≠nimo 8 caracteres</span>
                        </div>
                        <div class="check-item" id="check-upper">
                            <span class="check-icon">‚úó</span>
                            <span>Pelo menos 1 letra mai√∫scula</span>
                        </div>
                        <div class="check-item" id="check-number">
                            <span class="check-icon">‚úó</span>
                            <span>Pelo menos 1 n√∫mero</span>
                        </div>
                        <div class="strength-bar">
                            <div class="strength-fill" id="strength-fill"></div>
                        </div>
                    </div>
                </div>
                
                <div class="form-group">
                    <label for="password_confirm">Confirmar Senha <span class="required">*</span></label>
                    <input type="password" id="password_confirm" name="password_confirm" required placeholder="Confirme sua senha">
                    <div class="field-error" id="password-confirm-error"></div>
                </div>
            </div>
            
            <div class="loading" id="loading">
                <div class="spinner"></div>
                <p>Criando conta m√©dica...</p>
            </div>
            
            <button type="submit" class="btn" id="submitBtn">Criar Conta M√©dica</button>
        </form>
        
        <div class="link">
            <a href="/auth/login">J√° possui conta? Fa√ßa login aqui</a>
        </div>
        
        <div class="link">
            <a href="/">‚Üê Voltar para o in√≠cio</a>
        </div>
    </div>

    <script type="module">
    // AuthService inline - sem imports
    const authService = {
        async register(userData) {
            const response = await fetch('http://192.168.1.4:8081/api/v1/auth/register/', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(userData)
            });
            
            if (!response.ok) {
                const error = await response.json();
                throw error;
            }
            
            return await response.json();
        },
        
        isAuthenticated() {
            return !!localStorage.getItem('medical_access_token');
        }
    };
    
    const form = document.getElementById('registerForm');
    const submitBtn = document.getElementById('submitBtn');
    const loading = document.getElementById('loading');
    const messageDiv = document.getElementById('message');
    
    // Redirecionar se profissional j√° estiver logado
    if (authService.isAuthenticated()) {
        window.location.href = '/dashboard/medico';
    }
    
    function showMessage(message, type = 'error') {
        messageDiv.innerHTML = `<div class="message ${type}">${message}</div>`;
        setTimeout(() => {
            messageDiv.innerHTML = '';
        }, 7000);
    }
    
    function setLoading(isLoading) {
        if (isLoading) {
            loading.style.display = 'block';
            submitBtn.disabled = true;
            submitBtn.textContent = 'Criando conta...';
        } else {
            loading.style.display = 'none';
            submitBtn.disabled = false;
            submitBtn.textContent = 'Criar Conta M√©dica';
        }
    }
    
    // Valida√ß√£o em tempo real com indicadores visuais
    const passwordInput = document.getElementById('password');
    const confirmPasswordInput = document.getElementById('password_confirm');
    const checkLength = document.getElementById('check-length');
    const checkUpper = document.getElementById('check-upper');
    const checkNumber = document.getElementById('check-number');
    const strengthFill = document.getElementById('strength-fill');

    function updatePasswordChecks() {
        const password = passwordInput.value;
        let score = 0;
        
        // Check length
        if (password.length >= 8) {
            checkLength.classList.add('valid');
            checkLength.classList.remove('invalid');
            checkLength.querySelector('.check-icon').textContent = '‚úì';
            score++;
        } else {
            checkLength.classList.add('invalid');
            checkLength.classList.remove('valid');
            checkLength.querySelector('.check-icon').textContent = '‚úó';
        }
        
        // Check uppercase
        if (/[A-Z]/.test(password)) {
            checkUpper.classList.add('valid');
            checkUpper.classList.remove('invalid');
            checkUpper.querySelector('.check-icon').textContent = '‚úì';
            score++;
        } else {
            checkUpper.classList.add('invalid');
            checkUpper.classList.remove('valid');
            checkUpper.querySelector('.check-icon').textContent = '‚úó';
        }
        
        // Check number
        if (/[0-9]/.test(password)) {
            checkNumber.classList.add('valid');
            checkNumber.classList.remove('invalid');
            checkNumber.querySelector('.check-icon').textContent = '‚úì';
            score++;
        } else {
            checkNumber.classList.add('invalid');
            checkNumber.classList.remove('valid');
            checkNumber.querySelector('.check-icon').textContent = '‚úó';
        }
        
        // Update strength bar
        strengthFill.className = 'strength-fill';
        if (score === 1) strengthFill.classList.add('strength-weak');
        else if (score === 2) strengthFill.classList.add('strength-fair');
        else if (score === 3 && password.length > 10) strengthFill.classList.add('strength-strong');
        else if (score === 3) strengthFill.classList.add('strength-good');
        
        // Update field styling
        if (score === 3) {
            passwordInput.classList.add('field-valid');
            passwordInput.classList.remove('field-invalid');
        } else if (password.length > 0) {
            passwordInput.classList.add('field-invalid');
            passwordInput.classList.remove('field-valid');
        }
    }

    function validatePasswordMatch() {
        const password = passwordInput.value;
        const confirmPassword = confirmPasswordInput.value;
        
        if (confirmPassword) {
            if (password === confirmPassword) {
                confirmPasswordInput.classList.add('field-valid');
                confirmPasswordInput.classList.remove('field-invalid');
                confirmPasswordInput.setCustomValidity('');
                document.getElementById('password-confirm-error').style.display = 'none';
            } else {
                confirmPasswordInput.classList.add('field-invalid');
                confirmPasswordInput.classList.remove('field-valid');
                confirmPasswordInput.setCustomValidity('As senhas n√£o coincidem');
                document.getElementById('password-confirm-error').textContent = 'As senhas n√£o coincidem';
                document.getElementById('password-confirm-error').style.display = 'block';
            }
        }
    }

    // Valida√ß√£o de email em tempo real
    const emailInput = document.getElementById('email');
    emailInput.addEventListener('input', () => {
        const email = emailInput.value;
        const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        
        if (email && emailRegex.test(email)) {
            emailInput.classList.add('field-valid');
            emailInput.classList.remove('field-invalid');
            document.getElementById('email-error').style.display = 'none';
        } else if (email) {
            emailInput.classList.add('field-invalid');
            emailInput.classList.remove('field-valid');
            document.getElementById('email-error').textContent = 'Email inv√°lido';
            document.getElementById('email-error').style.display = 'block';
        }
    });

    // Valida√ß√£o de CRM em tempo real
    const crmInput = document.getElementById('crm');
    crmInput.addEventListener('input', (e) => {
        let value = e.target.value.replace(/[^0-9A-Za-z-]/g, '').toUpperCase();
        e.target.value = value;
        
        // Validar formato CRM
        const crmRegex = /^[0-9]{4,6}-?[A-Z]{2}$/;
        if (value && crmRegex.test(value)) {
            crmInput.classList.add('field-valid');
            crmInput.classList.remove('field-invalid');
            document.getElementById('crm-error').style.display = 'none';
        } else if (value) {
            crmInput.classList.add('field-invalid');
            crmInput.classList.remove('field-valid');
            document.getElementById('crm-error').textContent = 'Formato: 12345-SP';
            document.getElementById('crm-error').style.display = 'block';
        }
    });

    // Valida√ß√£o de campos obrigat√≥rios
    function validateRequiredField(input, errorId, message) {
        if (input.value.trim()) {
            input.classList.add('field-valid');
            input.classList.remove('field-invalid');
            document.getElementById(errorId).style.display = 'none';
        } else {
            input.classList.add('field-invalid');
            input.classList.remove('field-valid');
            document.getElementById(errorId).textContent = message;
            document.getElementById(errorId).style.display = 'block';
        }
    }

    // Aplicar valida√ß√µes aos campos obrigat√≥rios
    document.getElementById('first_name').addEventListener('input', (e) => {
        validateRequiredField(e.target, 'first-name-error', 'Nome √© obrigat√≥rio');
    });

    document.getElementById('last_name').addEventListener('input', (e) => {
        validateRequiredField(e.target, 'last-name-error', 'Sobrenome √© obrigat√≥rio');
    });

    document.getElementById('username').addEventListener('input', (e) => {
        validateRequiredField(e.target, 'username-error', 'Nome de usu√°rio √© obrigat√≥rio');
    });

    document.getElementById('especialidade').addEventListener('change', (e) => {
        validateRequiredField(e.target, 'especialidade-error', 'Especialidade √© obrigat√≥ria');
    });

    passwordInput.addEventListener('input', () => {
        updatePasswordChecks();
        validatePasswordMatch();
    });

    confirmPasswordInput.addEventListener('input', validatePasswordMatch);
    
    // Formata√ß√£o do telefone
    const phoneInput = document.getElementById('phone');
    phoneInput.addEventListener('input', (e) => {
        let value = e.target.value.replace(/\D/g, '');
        value = value.replace(/^(\d{2})(\d)/g, '($1) $2');
        value = value.replace(/(\d)(\d{4})$/, '$1-$2');
        e.target.value = value;
    });
    
    form.addEventListener('submit', async (e) => {
        e.preventDefault();
        console.log('Form submetido!'); // Debug
        
        const formData = new FormData(e.target);
        const registerData = {
            username: formData.get('username'),
            email: formData.get('email'),
            first_name: formData.get('first_name'),
            last_name: formData.get('last_name'),
            password: formData.get('password'),
            password_confirm: formData.get('password_confirm'),
            crm: formData.get('crm'),
            especialidade: formData.get('especialidade'),
            phone: formData.get('phone') || ''
        };
        
        console.log('Dados do form:', registerData); // Debug
        
        // Valida√ß√£o b√°sica
        if (registerData.password !== registerData.password_confirm) {
            showMessage('As senhas n√£o coincidem');
            return;
        }
        
        if (registerData.password.length < 8) {
            showMessage('A senha deve ter pelo menos 8 caracteres');
            return;
        }
        
        if (!/[A-Z]/.test(registerData.password)) {
            showMessage('A senha deve conter pelo menos uma letra mai√∫scula');
            return;
        }
        
        if (!/[0-9]/.test(registerData.password)) {
            showMessage('A senha deve conter pelo menos um n√∫mero');
            return;
        }
        
        setLoading(true);
        
        try {
            console.log('Enviando para API...'); // Debug
            const response = await authService.register(registerData);
            console.log('Resposta da API:', response); // Debug
            showMessage('Conta m√©dica criada com sucesso! Redirecionando para login...', 'success');
            
            setTimeout(() => {
                window.location.href = '/auth/login';
            }, 2000);
            
        } catch (error) {
            console.error('Erro no cadastro m√©dico:', error);
            let errorMessage = 'Erro no cadastro. Tente novamente.';
            
            if (error.errors) {
                const errors = [];
                for (const [field, messages] of Object.entries(error.errors)) {
                    if (Array.isArray(messages)) {
                        errors.push(...messages);
                    } else {
                        errors.push(messages);
                    }
                }
                errorMessage = errors.join(', ');
            } else if (error.message) {
                errorMessage = error.message;
            }
            
            showMessage(errorMessage);
        } finally {
            setLoading(false);
        }
    });
</script>
</body>
</html>